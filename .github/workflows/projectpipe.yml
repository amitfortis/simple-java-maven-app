name: Maven Application Pipeline

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read 

    steps: 
     - name: Checkout the repo
       uses: actions/checkout@v4

     - name: Setup-Java
       uses: actions/setup-java@v4
       with:
          distribution: 'temurin'
          java-version: '17'

     - name: Increment Jar Version
       id: increment-version
       run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          mvn versions:set -DnewVersion=$NEW_VERSION
          mvn versions:commit

     - name: Add and commit
       uses: EndBug/add-and-commit@v9
       with:
        add: 'pom.xml'
        fetch: false
        message: 'Update POM version. [skip ci]'
        push: true

     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v4
       with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

     - name: Login to Amazon ECR 
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v2
        
     - name: Setup Docker Build 
       uses: docker/setup-buildx-action@v3 

     - name: Build, tag, and push docker image to Amazon ECR
       env: 
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ secrets.ECR_REPO }}
        IMAGE_TAG: ${{ steps.increment-version.outputs.NEW_VERSION }}
       run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "FULL_IMAGE_NAME=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

     - name: Deploy 
       run: |
          docker run --rm ${{ env.FULL_IMAGE_NAME }}


